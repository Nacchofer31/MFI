MODULE main
VAR
	botones : array 0..3 of boolean;
	planta : 0..3;
	direccion : {up,down};
	puertas : boolean;

ASSIGN
	init(puertas) := TRUE;
	init(planta) := 2;
	init(direccion) := down;
	next(planta) :=
		case
			!puertas & planta < 3 & direccion = up : planta + 1;
			!puertas & planta > 0 & direccion = down : planta - 1;
			TRUE : planta;
		esac;
	next(direccion) :=
		case
			!puertas & planta < next(planta) : up;
			!puertas & planta > next(planta) : down;
			!puertas & planta = 3 : down;
			!puertas & planta = 0 : up;
			TRUE : direccion;
		esac;
	next(puertas) :=
		case
			puertas = TRUE : FALSE;
			next(planta) = 0 & botones[0] : TRUE;
			next(planta) = 1 & botones[1] : TRUE;
			next(planta) = 2 & botones[2] : TRUE;
			next(planta) = 3 & botones[3] : TRUE;
			TRUE : puertas;
		esac;
	next(botones[0]) :=
		case
			next(planta) = 0 & next(puertas) : FALSE;
			botones[0] : TRUE;
			TRUE : botones[0];
		esac;
	next(botones[1]) :=
		case
			next(planta) = 1 & next(puertas) : FALSE;
			botones[1] : TRUE;
			TRUE : botones[1];
		esac;
	next(botones[2]) :=
		case
			next(planta) = 2 & next(puertas) : FALSE;
			botones[2] : TRUE;
			TRUE : botones[2];
		esac;
	next(botones[3]) :=
		case
			next(planta) = 3 & next(puertas) : FALSE;
			botones[3] : TRUE;
			TRUE : botones[3];
		esac;

SPEC -- safety
	AG (puertas & planta = 0 -> AX planta = 0)

SPEC -- safety
	AG (puertas & planta = 1 -> AX planta = 1)

SPEC -- safety
	AG (puertas & planta = 2 -> AX planta = 2)

SPEC -- safety
	AG (puertas & planta = 3 -> AX planta = 3)

SPEC -- liveness
	AG (botones[0] -> AF planta = 0)

SPEC -- liveness
	AG (botones[1] -> AF planta = 1)

SPEC -- liveness
	AG (botones[2] -> AF planta = 2)

SPEC -- liveness
AG (botones[3] -> AF planta = 3)