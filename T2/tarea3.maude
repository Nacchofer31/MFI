fmod BATTERY-AC is
protecting BOOL .
protecting NAT .

sort EmptyCell Cell EmptyBattery Battery .
subsorts EmptyBattery < Cell < Battery .
subsorts EmptyCell < EmptyBattery < Battery .

ops - : -> EmptyCell [ctor] .
ops o + : -> Cell [ctor] .

op nil : -> EmptyBattery [ctor] .
op __ : Battery Battery -> Battery [ctor assoc comm id: nil] .
op __ : EmptyBattery EmptyBattery -> EmptyBattery [ctor assoc comm id: nil] .

op is-empty : Battery -> Bool .
op is-full : Battery -> Bool .
op bat-life : Battery -> Nat .

endfm


fmod BATTERY-TASK is
protecting BATTERY-AC .

var C : Cell .  
var Bt : Battery .
var EBt : EmptyBattery .

---Empty Battery

eq is-empty(EB) = true .
eq is-empty(B) = false [owise] . 

---Full Battery

eq is-full(EB) = false .
eq is-full(o) = true .
eq is-full(o B) = is-full(B) .
eq is-full(B) = false [owise] . 

---Bat Life

eq bat-life(EB) = 0 .
eq bat-life(+) = 15 .
eq bat-life(o) = 30 .
eq bat-life(C B) = bat-life(C) + bat-life(B) [owise] . 
endfm